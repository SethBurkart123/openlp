stages:
  - test
  - deploy

variables:
  IMAGE_BASE: $CI_REGISTRY/openlp/runners

lint-python:
  stage: test
  image: $IMAGE_BASE/debian
  script:
    - sh scripts/generate_resources.sh
    - flake8

lint-javascript:
  stage: test
  image: $IMAGE_BASE/angular
  script:
    - yarn install
    - yarn lint

test-pypi:
  stage: test
  image: $IMAGE_BASE/pypi
  script:
    - pip install -e '.[darkstyle,mysql,odbc,postgresql,spellcheck,sword-bibles,test]'
    - sh scripts/generate_resources.sh
    - xvfb-run -s '-screen 0 1024x768x24' pytest --color=no --disable-warnings

test-debian:
  stage: test
  image: $IMAGE_BASE/debian
  script:
    - sh scripts/generate_resources.sh
    - xvfb-run -s '-screen 0 1024x768x24' pytest-3 --color=no --disable-warnings --cov openlp --cov-report term --cov-report xml:coverage.xml
    - mv .coverage linux.coverage
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - linux.coverage
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test-ubuntu:
  stage: test
  image: $IMAGE_BASE/ubuntu
  script:
    - sh scripts/generate_resources.sh
    - xvfb-run -s '-screen 0 1024x768x24' pytest-3 --color=no --disable-warnings

test-fedora:
  stage: test
  image: $IMAGE_BASE/fedora
  script:
    - sh scripts/generate_resources.sh
    #    - xvfb-run -s '-screen 0 1024x768x24' pytest-3 --color=no --disable-warnings
    - xwfb-run -c weston -s \\-geometry -s 1024x768x24 -- pytest

test-arch:
  stage: test
  image: $IMAGE_BASE/arch
  script:
    - sh scripts/generate_resources.sh
    - xvfb-run -s '-screen 0 1024x768x24' pytest --color=no --disable-warnings

# test-macos-intel:
#   stage: test
#   tags:
#     - apple-amd64
#   script:
#     - export PATH=/opt/local/bin:$PATH
#     - sh scripts/generate_resources.sh
#     - python3 -m pytest --color=no --disable-warnings --cov openlp
#     - mv .coverage macos.coverage
#   artifacts:
#     paths:
#       - macos.coverage
#   only:
#     - master@openlp/openlp

# test-macos-arm:
#   stage: test
#   tags:
#     - apple-arm
#   script:
#     - export PATH=/opt/local/bin:$PATH
#     - sh scripts/generate_resources.sh
#     - python3 -m pytest --color=no --disable-warnings
#   only:
#     - master@openlp/openlp

test-windows:
  stage: test
  tags:
    - saas-windows-medium-amd64
  script:
    - "# Enabling feature that doesn't let Chocolatey ask for confirmation"
    - choco feature enable --name='allowGlobalConfirmation'
    - "# Installing Python 3.12"
    - choco install python312
    - "# Importing PowerShell module for the Chocolatey profile"
    - Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
    - "# Refreshing the environment"
    - refreshenv
    - "# Set environment variable QT_QPA_PLATFORM to offscreen to avoid UI troubles."
    - $env:QT_QPA_PLATFORM='offscreen'
    - "# Download the necessary Bluetooth components for QT6 from OpenLP."
    - $bluetoothFileName = 'bluetooth.zip'
    - Invoke-WebRequest -OutFile "$env:Temp\$bluetoothFileName" -Uri "https://get.openlp.org/win-sdk/$bluetoothFileName"
    - "# Extracting the ZIP file"
    - Expand-Archive -Path "$env:Temp\$bluetoothFileName" -DestinationPath "C:\Windows\System32"
    - "# Updating pip"
    - python -m pip install --upgrade pip
    - "# Installing generic dependencies from PyPI"
    - >
      pip install alembic
      beautifulsoup4
      chardet
      flask
      flask-cors
      lxml
      Mako
      mock
      mysql-connector-python
      packaging
      platformdirs
      psycopg2-binary
      pyenchant
      pymediainfo
      PyMuPDF
      PySide6
      pysword
      pytest
      pytest-qt
      QDarkStyle
      qrcode
      QtAwesome
      requests
      six
      sqlalchemy
      waitress
      websockets
    - "# Installing Windows only dependencies from PyPI"
    - pip install pyodbc pypiwin32
    - $pyIcuPackageFileName = 'PyICU-2.14-cp312-cp312-win_amd64.whl'
    - "# Downloading PyICU for Windows from GitHub"
    - Invoke-WebRequest -OutFile $pyIcuPackageFileName -Uri https://github.com/cgohlke/pyicu-build/releases/download/v2.14/$pyIcuPackageFileName
    - "# Installing PyICU for Windows"
    - pip install $pyIcuPackageFileName
    - "# Running tests"
    - pytest --color=no --disable-warnings
  only:
    - master@openlp/openlp

test-display:
  stage: test
  image: $IMAGE_BASE/angular
  script:
    - yarn install
    - yarn test --browsers ChromiumHeadlessCI

upload-pypi:
  stage: deploy
  image: $IMAGE_BASE/debian
  script:
    - python3 setup.py sdist bdist_wheel
    - twine upload dist/*
  only:
    - tags

pages:
  stage: deploy
  image: $IMAGE_BASE/debian
  script:
    # - fixpaths linux.coverage
    # - fixpaths macos.coverage
    # - python3-coverage combine linux.coverage macos.coverage
    - mv linux.coverage .coverage
    - python3-coverage html
    - mv htmlcov public
    - python3-coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - public
    expire_in: 30 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  dependencies:
    - test-debian
    # - test-macos-intel
  only:
    - master@openlp/openlp
